# Sample GitHub Actions workflow to deploy and retrieeve a go package to Artifactory

name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go 1.19.4
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.4
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Build
        #run: go build -v ./... -o ./dist/artifactory-demo
        run: go build -o dist/artifactory-demo
      - name: Bump version and push tag
        #uses: anothrNick/github-tag-action@1.36.0
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          INITIAL_VERSION: v0.0.1
          VERBOSE: true
          DEFAULT_BUMP: patch
        id: tag_version
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }} 
      - uses: actions/checkout@v3
      - name: Set up Go 1.19.4
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.4
      - name: publish to artifactory
        uses: advancedcsg-open/action-jfrog-cli@master
        with:
          url: ${{ secrets.RT_URL }}
          credentials-type: 'apikey'
          apikey: ${{ secrets.RT_APIKEY }}
          args: u "dist/*" "/artifactory-demo/${{ steps.tag_version.outputs.new_tag }}" --recursive=true --build-name=artifactory-demo --build-number=${{ steps.tag_version.outputs.new_tag }}}
  artifactoryDownload:
    runs-on : ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go 1.19.4
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.4
      - name: download from artifactory
        uses: advancedcsg-open/action-jfrog-cli@master
        with:
          url: ${{ secrets.RT_URL }}
          credentials-type: 'apikey'
          apikey: ${{ secrets.RT_APIKEY }}
          args: dl "/artifactory-demo/${{ steps.tag_version.outputs.new_tag }}/artifactory-demo" "dist/artifactory-demo" --build-name=artifactory-demo --build-number=${{ steps.tag_version.outputs.new_tag }}
